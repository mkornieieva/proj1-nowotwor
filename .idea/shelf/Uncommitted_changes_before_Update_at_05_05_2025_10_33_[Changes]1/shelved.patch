Index: data/database/laczenie_user.env
===================================================================
diff --git a/data/database/laczenie_user.env b/data/database/laczenie_user.env
deleted file mode 100644
--- a/data/database/laczenie_user.env	
+++ /dev/null	
@@ -1,3 +0,0 @@
-DB_USER=nowotwor_user
-DB_PASSWORD=nowotwor_eiti
-DB_DSN=localhost/XEPDB1
Index: AI/proj1_nowotwor.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n \"cells\": [\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": \"\",\r\n   \"id\": \"5a5614ba810ed24\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"import torch\\n\",\r\n    \"\\n\",\r\n    \"if torch.cuda.is_available():\\n\",\r\n    \"    print(\\\"CUDA is available.\\\")\\n\",\r\n    \"else:\\n\",\r\n    \"    print(\\\"CUDA is not available. Running on CPU-only mode.\\\")\"\r\n   ],\r\n   \"id\": \"779e6dfd6424ff05\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"import torch\\n\",\r\n    \"print(\\\"CUDA dostępne:\\\", torch.cuda.is_available())\\n\",\r\n    \"if torch.cuda.is_available():\\n\",\r\n    \"    print(\\\"Wykryta karta:\\\", torch.cuda.get_device_name(0))\\n\"\r\n   ],\r\n   \"id\": \"c341622e441ea731\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"%pip install ultralytics\\n\",\r\n    \"import ultralytics\\n\",\r\n    \"ultralytics.checks()\"\r\n   ],\r\n   \"id\": \"fa112fb21f2567b6\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"markdown\",\r\n   \"source\": \"# test\\n\",\r\n   \"id\": \"6022719b41c41b12\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"%pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121\\n\",\r\n    \"\\n\"\r\n   ],\r\n   \"id\": \"9166db5e5560d7db\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"import torch\\n\",\r\n    \"print(\\\"CUDA dostępne:\\\", torch.cuda.is_available())\\n\",\r\n    \"if torch.cuda.is_available():\\n\",\r\n    \"    print(\\\"Wykryta karta:\\\", torch.cuda.get_device_name(0))\"\r\n   ],\r\n   \"id\": \"5637ee57882d06f8\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"import sys\\n\",\r\n    \"print(sys.executable)\"\r\n   ],\r\n   \"id\": \"8a39472b6c265354\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"\\n\",\r\n    \"%pip install ipykernel\\n\",\r\n    \"%python -m ipykernel install --user --name cuda-env --display-name \\\"Python (CUDA)\\\"\\n\"\r\n   ],\r\n   \"id\": \"7b282cc7d1adb06d\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"import torch\\n\",\r\n    \"print(torch.__version__)\\n\",\r\n    \"print(\\\"CUDA:\\\", torch.cuda.is_available())\\n\",\r\n    \"print(\\\"GPU:\\\", torch.cuda.get_device_name(0) if torch.cuda.is_available() else \\\"Brak\\\")\\n\",\r\n    \"\\n\"\r\n   ],\r\n   \"id\": \"aeb392fee05044d5\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"markdown\",\r\n   \"source\": \"# trening\",\r\n   \"id\": \"42b11e9f1f9f1b58\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"from ultralytics import YOLO\\n\",\r\n    \"\\n\",\r\n    \"# Load a model\\n\",\r\n    \"model = YOLO(\\\"yolo11n.pt\\\")  # load a pretrained model\\n\",\r\n    \"\\n\",\r\n    \"# Train the model on GPU (device=0)\\n\",\r\n    \"results = model.train(\\n\",\r\n    \"    data='C:/Users/basia/PycharmProjects/proj1-nowotwor/model/data.yaml',\\n\",\r\n    \"    epochs=100,\\n\",\r\n    \"    imgsz=512,\\n\",\r\n    \"    device=0  # GPU 0 = Twoja karta NVIDIA\\n\",\r\n    \")\\n\"\r\n   ],\r\n   \"id\": \"1d1703b91ece27e9\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"markdown\",\r\n   \"source\": \"# gotowy model\",\r\n   \"id\": \"d15ba6c70b8cd69\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"from ultralytics import YOLO\\n\",\r\n    \"\\n\",\r\n    \"# Load a model\\n\",\r\n    \"model = YOLO(\\\"C:/Users/basia/OneDrive/Pulpit/now/runs/detect/train13/weights/best.pt\\\")  # load a brain-tumor fine-tuned model\\n\",\r\n    \"\\n\",\r\n    \"# Inference using the model\\n\",\r\n    \"results = model.predict(\\\"C:/Users/basia/PycharmProjects/proj1-nowotwor/model/output3/test/images\\\")\"\r\n   ],\r\n   \"id\": \"4ba65ee7dec71c59\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": \"results = pd.DataFrame(results)\",\r\n   \"id\": \"4279b6b2f37efd8a\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"import os\\n\",\r\n    \"import pandas as pd\\n\",\r\n    \"\\n\",\r\n    \"# Ścieżki do folderów\\n\",\r\n    \"images_folder = \\\"C:/Users/basia/PycharmProjects/proj1-nowotwor/model/output3/test/images\\\"\\n\",\r\n    \"labels_folder = \\\"C:/Users/basia/PycharmProjects/proj1-nowotwor/model/output3/test/labels\\\"\\n\",\r\n    \"\\n\",\r\n    \"# Lista do przechowywania danych\\n\",\r\n    \"data = []\\n\",\r\n    \"\\n\",\r\n    \"# Iteracja po plikach graficznych\\n\",\r\n    \"for image_file in os.listdir(images_folder):\\n\",\r\n    \"    if image_file.lower().endswith(('.jpg', '.jpeg', '.png', '.bmp', '.gif')):\\n\",\r\n    \"        image_name = image_file\\n\",\r\n    \"        label_file = os.path.splitext(image_file)[0] + \\\".txt\\\"\\n\",\r\n    \"        label_path = os.path.join(labels_folder, label_file)\\n\",\r\n    \"\\n\",\r\n    \"        # Sprawdzenie czy odpowiadający plik tekstowy istnieje\\n\",\r\n    \"        if os.path.isfile(label_path):\\n\",\r\n    \"            with open(label_path, 'r', encoding='utf-8') as f:\\n\",\r\n    \"                first_char = f.read(1)\\n\",\r\n    \"                label = int(first_char) if first_char in ['0', '1'] else None\\n\",\r\n    \"        else:\\n\",\r\n    \"            label = None  # lub np. -1 jeśli chcesz oznaczyć brak pliku\\n\",\r\n    \"\\n\",\r\n    \"        data.append({'image_name': image_name, 'label': label})\\n\",\r\n    \"\\n\",\r\n    \"# Tworzenie DataFrame\\n\",\r\n    \"test_real = pd.DataFrame(data)\\n\",\r\n    \"\\n\",\r\n    \"# Wyświetlenie lub zapisanie wyników\\n\",\r\n    \"print(df)\\n\",\r\n    \"# df.to_csv(\\\"image_labels.csv\\\", index=False)  # jeśli chcesz zapisać\\n\"\r\n   ],\r\n   \"id\": \"a57308cfecc101a5\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"import os\\n\",\r\n    \"import pandas as pd\\n\",\r\n    \"import numpy as np\\n\",\r\n    \"\\n\",\r\n    \"data = []\\n\",\r\n    \"\\n\",\r\n    \"# Sprawdzamy, czy to pojedynczy obiekt Results, czy tablica (np. z predict())\\n\",\r\n    \"results_array = results.values\\n\",\r\n    \"results_flat = results_array.flatten() if isinstance(results_array, np.ndarray) else [results_array]\\n\",\r\n    \"\\n\",\r\n    \"for result in results_flat:\\n\",\r\n    \"    image_path = result.path\\n\",\r\n    \"    image_name = os.path.basename(image_path)\\n\",\r\n    \"\\n\",\r\n    \"    if result.boxes is not None and result.boxes.cls.numel() > 0:\\n\",\r\n    \"        labels = result.boxes.cls.cpu().numpy().astype(int)\\n\",\r\n    \"        label = int(pd.Series(labels).mode()[0])  # Najczęstszy label\\n\",\r\n    \"    else:\\n\",\r\n    \"        label = None  # Brak wykrycia\\n\",\r\n    \"\\n\",\r\n    \"    data.append({'image_name': image_name, 'label': label})\\n\",\r\n    \"\\n\",\r\n    \"# Tworzymy DataFrame\\n\",\r\n    \"df = pd.DataFrame(data)\\n\",\r\n    \"print(df)\\n\"\r\n   ],\r\n   \"id\": \"c958d472d39bebfc\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"test_pred = df\\n\",\r\n    \"test_pred = test_pred.fillna(0)\"\r\n   ],\r\n   \"id\": \"a2b7edf95a3c0c83\"\r\n  },\r\n  {\r\n   \"metadata\": {},\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"execution_count\": null,\r\n   \"source\": [\r\n    \"import pandas as pd\\n\",\r\n    \"from sklearn.metrics import accuracy_score, precision_score, recall_score\\n\",\r\n    \"\\n\",\r\n    \"# LEFT JOIN po image_name\\n\",\r\n    \"df = test_real.merge(test_pred, on='image_name')\\n\",\r\n    \"\\n\",\r\n    \"# Uzupełnienie brakujących predykcji na 0 (brak wykrycia = negatyw)\\n\",\r\n    \"df['label_pred'] = df['label_pred'].fillna(0).astype(int)\\n\",\r\n    \"\\n\",\r\n    \"# Obliczenie metryk\\n\",\r\n    \"accuracy = accuracy_score(df['label_real'], df['label_pred'])\\n\",\r\n    \"precision = precision_score(df['label_real'], df['label_pred'], zero_division=0)\\n\",\r\n    \"recall = recall_score(df['label_real'], df['label_pred'], zero_division=0)\\n\",\r\n    \"\\n\",\r\n    \"# Wyświetlenie wyników\\n\",\r\n    \"print(f\\\"Accuracy:  {accuracy:.4f}\\\")\\n\",\r\n    \"print(f\\\"Precision: {precision:.4f}\\\")\\n\",\r\n    \"print(f\\\"Recall:    {recall:.4f}\\\")\\n\"\r\n   ],\r\n   \"id\": \"54492c2259e57388\"\r\n  }\r\n ],\r\n \"metadata\": {},\r\n \"nbformat\": 5,\r\n \"nbformat_minor\": 9\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/AI/proj1_nowotwor.ipynb b/AI/proj1_nowotwor.ipynb
--- a/AI/proj1_nowotwor.ipynb	
+++ b/AI/proj1_nowotwor.ipynb	
@@ -9,11 +9,15 @@
    "id": "5a5614ba810ed24"
   },
   {
-   "metadata": {},
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-04-21T22:31:03.108276Z",
+     "start_time": "2025-04-21T22:31:00.621721Z"
+    }
+   },
    "cell_type": "code",
-   "outputs": [],
-   "execution_count": null,
    "source": [
+    "import pd\n",
     "import torch\n",
     "\n",
     "if torch.cuda.is_available():\n",
@@ -21,32 +25,64 @@
     "else:\n",
     "    print(\"CUDA is not available. Running on CPU-only mode.\")"
    ],
-   "id": "779e6dfd6424ff05"
+   "id": "779e6dfd6424ff05",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "CUDA is not available. Running on CPU-only mode.\n"
+     ]
+    }
+   ],
+   "execution_count": 1
   },
   {
-   "metadata": {},
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-04-21T22:31:28.034501Z",
+     "start_time": "2025-04-21T22:31:28.029871Z"
+    }
+   },
    "cell_type": "code",
-   "outputs": [],
-   "execution_count": null,
    "source": [
     "import torch\n",
     "print(\"CUDA dostępne:\", torch.cuda.is_available())\n",
     "if torch.cuda.is_available():\n",
     "    print(\"Wykryta karta:\", torch.cuda.get_device_name(0))\n"
    ],
-   "id": "c341622e441ea731"
+   "id": "c341622e441ea731",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "CUDA dostępne: False\n"
+     ]
+    }
+   ],
+   "execution_count": 2
   },
   {
    "metadata": {},
    "cell_type": "code",
-   "outputs": [],
-   "execution_count": null,
    "source": [
     "%pip install ultralytics\n",
     "import ultralytics\n",
     "ultralytics.checks()"
    ],
-   "id": "fa112fb21f2567b6"
+   "id": "fa112fb21f2567b6",
+   "execution_count": 3,
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Ultralytics 8.3.112  Python-3.12.3 torch-2.6.0+cpu CPU (12th Gen Intel Core(TM) i5-12500H)\n",
+      "Setup complete  (16 CPUs, 15.7 GB RAM, 139.7/200.1 GB disk)\n"
+     ]
+    }
+   ]
   },
   {
    "metadata": {},
@@ -55,15 +91,29 @@
    "id": "6022719b41c41b12"
   },
   {
-   "metadata": {},
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-04-21T22:35:29.145044Z",
+     "start_time": "2025-04-21T22:34:56.545110Z"
+    }
+   },
    "cell_type": "code",
-   "outputs": [],
-   "execution_count": null,
    "source": [
     "%pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121\n",
     "\n"
    ],
-   "id": "9166db5e5560d7db"
+   "id": "9166db5e5560d7db",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "^C\n",
+      "Note: you may need to restart the kernel to use updated packages.\n"
+     ]
+    }
+   ],
+   "execution_count": 5
   },
   {
    "metadata": {},
@@ -138,11 +188,17 @@
     "    epochs=100,\n",
     "    imgsz=512,\n",
     "    device=0  # GPU 0 = Twoja karta NVIDIA\n",
-    ")\n"
+    ")"
    ],
    "id": "1d1703b91ece27e9"
   },
   {
+   "metadata": {},
+   "cell_type": "markdown",
+   "source": "",
+   "id": "397483b236f54412"
+  },
+  {
    "metadata": {},
    "cell_type": "markdown",
    "source": "# gotowy model",
@@ -157,7 +213,7 @@
     "from ultralytics import YOLO\n",
     "\n",
     "# Load a model\n",
-    "model = YOLO(\"C:/Users/basia/OneDrive/Pulpit/now/runs/detect/train13/weights/best.pt\")  # load a brain-tumor fine-tuned model\n",
+    "model = YOLO(\"model2.0/weights/best.pt\")  # ładuje model lokalnie z projektu\n",
     "\n",
     "# Inference using the model\n",
     "results = model.predict(\"C:/Users/basia/PycharmProjects/proj1-nowotwor/model/output3/test/images\")"
@@ -287,7 +343,13 @@
    "id": "54492c2259e57388"
   }
  ],
- "metadata": {},
+ "metadata": {
+  "kernelspec": {
+   "name": "python3",
+   "language": "python",
+   "display_name": "Python 3 (ipykernel)"
+  }
+ },
  "nbformat": 5,
  "nbformat_minor": 9
 }
Index: data/database/data.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\nCreated: 09.03.2025\r\nModified: 10.03.2025\r\nProject: Rozpoznawanie nowotworów\r\nModel: Nowotwór\r\nAuthor: Grupa projektowa\r\nDatabase: Oracle 19c\r\n*/\r\n\r\n\r\n-- Create tables section -------------------------------------------------\r\n\r\n-- Table data\r\n\r\nCREATE TABLE \"data\"(\r\n  \"id\" Integer NOT NULL,\r\n  \"filename\" Varchar2(225 ),\r\n  \"image_data\" Blob NOT NULL,\r\n  \"annotation_xml\" Varchar2(255 ) NOT NULL,\r\n  \"status\" Varchar2(30 )\r\n        CHECK (\"status\" IN ('pending', 'processed')),\r\n  \"uploaded_at\" Timestamp(6)\r\n)\r\n/\r\n\r\n-- Add keys for table data\r\n\r\nALTER TABLE \"data\" ADD CONSTRAINT \"PK_data\" PRIMARY KEY (\"id\")\r\n/\r\n\r\n\r\n-- Table ProcessedImages\r\n\r\nCREATE TABLE \"ProcessedImages\"(\r\n  \"proc_image_id\" Integer NOT NULL,\r\n  \"filename\" Varchar2(225 ),\r\n  \"image_data\" Blob NOT NULL,\r\n  \"processing_date\" Timestamp(6),\r\n  \"id\" Integer NOT NULL\r\n)\r\n/\r\n\r\n-- Add keys for table ProcessedImages\r\n\r\nALTER TABLE \"ProcessedImages\" ADD CONSTRAINT \"PK_ProcessedImages\" PRIMARY KEY (\"id\",\"proc_image_id\")\r\n/\r\n\r\n-- Table ProcessedAnnotations\r\n\r\nCREATE TABLE \"ProcessedAnnotations\"(\r\n  \"id_proc_annotat\" Integer NOT NULL,\r\n  \"x_min\" Integer NOT NULL,\r\n  \"x_max\" Integer NOT NULL,\r\n  \"y_min\" Integer NOT NULL,\r\n  \"y_max\" Integer NOT NULL,\r\n  \"created_at\" Timestamp(6),\r\n  \"id\" Integer NOT NULL\r\n)\r\n/\r\n\r\n-- Add keys for table ProcessedAnnotations\r\n\r\nALTER TABLE \"ProcessedAnnotations\" ADD CONSTRAINT \"PK_ProcessedAnnotations\" PRIMARY KEY (\"id_proc_annotat\",\"id\")\r\n/\r\n\r\n-- Table AnalysisResult\r\n\r\nCREATE TABLE \"AnalysisResult\"(\r\n  \"analysis_id\" Integer NOT NULL,\r\n  \"x_min\" Integer NOT NULL,\r\n  \"x_max\" Integer NOT NULL,\r\n  \"y_min\" Integer NOT NULL,\r\n  \"y_max\" Integer NOT NULL,\r\n  \"confidence\" Float(126),\r\n  \"id\" Integer NOT NULL,\r\n  \"proc_image_id\" Integer NOT NULL\r\n)\r\n/\r\n\r\n-- Add keys for table AnalysisResult\r\n\r\nALTER TABLE \"AnalysisResult\" ADD CONSTRAINT \"PK_AnalysisResult\" PRIMARY KEY (\"id\",\"proc_image_id\",\"analysis_id\")\r\n/\r\n\r\n\r\n-- Create foreign keys (relationships) section -------------------------------------------------\r\n\r\nALTER TABLE \"ProcessedImages\" ADD CONSTRAINT \"Obraz_jest_przetwarzany\" FOREIGN KEY (\"id\") REFERENCES \"data\" (\"id\")\r\n/\r\n\r\n\r\n\r\n\r\nALTER TABLE \"ProcessedAnnotations\" ADD CONSTRAINT \"Przetwarzanie_XML\" FOREIGN KEY (\"id\") REFERENCES \"data\" (\"id\")\r\n/\r\n\r\n\r\n\r\nALTER TABLE \"AnalysisResult\" ADD CONSTRAINT \"Analiza_stworzona_przez_model\" FOREIGN KEY (\"id\", \"proc_image_id\") REFERENCES \"ProcessedImages\" (\"id\", \"proc_image_id\")\r\n/
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/database/data.sql b/data/database/data.sql
--- a/data/database/data.sql	
+++ b/data/database/data.sql	
@@ -10,7 +10,7 @@
 
 -- Create tables section -------------------------------------------------
 
--- Table data
+-- Table data_example
 
 CREATE TABLE "data"(
   "id" Integer NOT NULL,
@@ -23,7 +23,7 @@
 )
 /
 
--- Add keys for table data
+-- Add keys for table data_example
 
 ALTER TABLE "data" ADD CONSTRAINT "PK_data" PRIMARY KEY ("id")
 /
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e0308b27-d261-4cba-877e-489bfab439a1\" name=\"Changes\" comment=\"pliki dla uzycia bazy\">\r\n      <change afterPath=\"$PROJECT_DIR$/data/data_processing/getUID.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/data_processing/normalize_image_with_database.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/data_processing/resize_image_with_database.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/data_processing/resize_images_to_256.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/data_processing/resize_images_to_256.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/database/data.sql\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/database/data.sql\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/database/models.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/database/models.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"SQL File\" />\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"Myloslava Kornieieva &lt;159495488+mkornieieva@users.noreply.github.com&gt;\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;mkornieieva&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/mkornieieva/proj1-nowotwor.git&quot;,\r\n    &quot;accountId&quot;: &quot;edbeea52-429f-4627-a7fd-090b483f03de&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2tohQyxk1tNH6dBostDJFOTYhjQ\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.getUID.executor\": \"Run\",\r\n    \"Python.gui.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"DatabaseDriversLRU\": [\r\n      \"oracle\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\USER\\PycharmProjects\\proj1-nowotwor\\data\\data_processing\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-PY-241.18034.82\" />\r\n        <option value=\"bundled-python-sdk-975db3bf15a3-2767605e8bc2-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-241.18034.82\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e0308b27-d261-4cba-877e-489bfab439a1\" name=\"Changes\" comment=\"\" />\r\n      <created>1741024323023</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1741024323023</updated>\r\n      <workItem from=\"1741024324382\" duration=\"1937000\" />\r\n      <workItem from=\"1741027081638\" duration=\"1185000\" />\r\n      <workItem from=\"1741525647030\" duration=\"2553000\" />\r\n      <workItem from=\"1741765834899\" duration=\"14321000\" />\r\n      <workItem from=\"1742736379871\" duration=\"4926000\" />\r\n      <workItem from=\"1743528646418\" duration=\"1318000\" />\r\n      <workItem from=\"1744008357239\" duration=\"4469000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"config.yaml\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741027458709</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741027458709</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"struktura\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1742167816106</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1742167816106</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"database skrypt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1742168615345</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1742168615345</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"database connection\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1742239214530</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1742239214530</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"pliki dla uzycia bazy\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1742479171787</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1742479171787</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Update README.md\" />\r\n    <MESSAGE value=\"config.yaml\" />\r\n    <MESSAGE value=\"struktura\" />\r\n    <MESSAGE value=\"database skrypt\" />\r\n    <MESSAGE value=\"database connection\" />\r\n    <MESSAGE value=\"pliki dla uzycia bazy\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"pliki dla uzycia bazy\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/proj1_nowotwor$getUID.coverage\" NAME=\"getUID Coverage Results\" MODIFIED=\"1744048918750\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/data/data_processing\" />\r\n    <SUITE FILE_PATH=\"coverage/proj1_nowotwor$gui.coverage\" NAME=\"gui Coverage Results\" MODIFIED=\"1742695624446\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/app\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,14 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e0308b27-d261-4cba-877e-489bfab439a1" name="Changes" comment="pliki dla uzycia bazy">
-      <change afterPath="$PROJECT_DIR$/data/data_processing/getUID.py" afterDir="false" />
+    <list default="true" id="e0308b27-d261-4cba-877e-489bfab439a1" name="Changes" comment=".">
+      <change beforePath="$PROJECT_DIR$/.idea/proj1-nowotwor.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/proj1-nowotwor.iml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/data_processing/normalize_image_with_database.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/data_processing/resize_image_with_database.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/data_processing/resize_images_to_256.py" beforeDir="false" afterPath="$PROJECT_DIR$/data/data_processing/resize_images_to_256.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/AI/proj1_nowotwor.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/AI/proj1_nowotwor.ipynb" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/data/database/data.sql" beforeDir="false" afterPath="$PROJECT_DIR$/data/database/data.sql" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/database/models.py" beforeDir="false" afterPath="$PROJECT_DIR$/data/database/models.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/data/database/laczenie_user.env" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -54,25 +52,25 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Python.getUID.executor": "Run",
-    "Python.gui.executor": "Run",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "main",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Python.getUID.executor&quot;: &quot;Run&quot;,
+    &quot;Python.gui.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   },
-  "keyToStringList": {
-    "DatabaseDriversLRU": [
-      "oracle"
+  &quot;keyToStringList&quot;: {
+    &quot;DatabaseDriversLRU&quot;: [
+      &quot;oracle&quot;
     ]
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Users\USER\PycharmProjects\proj1-nowotwor\data\data_processing" />
@@ -100,7 +98,10 @@
       <workItem from="1741765834899" duration="14321000" />
       <workItem from="1742736379871" duration="4926000" />
       <workItem from="1743528646418" duration="1318000" />
-      <workItem from="1744008357239" duration="4469000" />
+      <workItem from="1744008357239" duration="5774000" />
+      <workItem from="1744616439829" duration="9000" />
+      <workItem from="1745274214260" duration="7328000" />
+      <workItem from="1745352878298" duration="2221000" />
     </task>
     <task id="LOCAL-00001" summary="config.yaml">
       <option name="closed" value="true" />
@@ -142,7 +143,23 @@
       <option name="project" value="LOCAL" />
       <updated>1742479171787</updated>
     </task>
-    <option name="localTasksCounter" value="6" />
+    <task id="LOCAL-00006" summary=".">
+      <option name="closed" value="true" />
+      <created>1744049580564</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1744049580564</updated>
+    </task>
+    <task id="LOCAL-00007" summary=".">
+      <option name="closed" value="true" />
+      <created>1744049749572</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1744049749572</updated>
+    </task>
+    <option name="localTasksCounter" value="8" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -166,7 +183,8 @@
     <MESSAGE value="database skrypt" />
     <MESSAGE value="database connection" />
     <MESSAGE value="pliki dla uzycia bazy" />
-    <option name="LAST_COMMIT_MESSAGE" value="pliki dla uzycia bazy" />
+    <MESSAGE value="." />
+    <option name="LAST_COMMIT_MESSAGE" value="." />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/proj1_nowotwor$getUID.coverage" NAME="getUID Coverage Results" MODIFIED="1744048918750" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/data/data_processing" />
